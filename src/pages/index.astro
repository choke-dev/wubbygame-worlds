---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}

			.search-bar {
				border-radius: 12px;
				border: 1px solid rgb(var(--gray-light));
				padding: 0.5em 1em;
			}

			.search-btn {
				background-color: transparent;
				border: none;
			}

			.play-btn {
				background-color: rgb(var(--accent));
				color: white;
				border: none;
				padding: 0.5em 1em;
				border-radius: 12px;
				margin-left: 1em;
			}
		</style>
		<script>
			const fetchWorlds = async(keyword: string) => {
				console.log(keyword)
				const worlds = await fetch(`https://api.wubbygame.com/v1/searchworld?query=${keyword}&limit=100`)
					.then(res => res.json())

				return worlds
			}

			const searchInput = document.querySelector('.search-bar')!
			const searchBtn = document.querySelector('.search-btn')!

			searchInput.addEventListener('keypress', (e) => {
				//@ts-expect-error
				if (e.key === "Enter") {
					//@ts-expect-error
					searchBtn.click()
				}
			})

			searchBtn.addEventListener('click', async () => {
				//@ts-expect-error
				const keyword = searchInput.value

				if (!keyword) {
					return
				}

				const worlds = await fetchWorlds(keyword)

				const worldList = document.querySelector('.world-list')!

				while (worldList.firstChild) {
        			worldList.removeChild(worldList.firstChild)
    			}

				if (worlds.length === 0) {
					const listItem = document.createElement('li')
					const worldName = document.createElement('h3')
					worldName.textContent = 'No results found'
					listItem.appendChild(worldName)
					worldList.appendChild(listItem)
					return
				}

				//@ts-expect-error
				worlds.forEach(world => {
					const listItem = document.createElement('li')
					const worldName = document.createElement('h3')
					const worldImage = document.createElement('img')
					const worldDescription = document.createElement('p')
					const worldId = document.createElement('p')
					const worldOwner = document.createElement('p')
					const playButton = document.createElement('button')
					listItem.style.textAlign = "center"
					worldName.textContent = world.name
					worldImage.src = `https://assetdelivery.roblox.com/v1/asset/?id=${world.thumbnails[0]}`
					worldImage.width = 360
					worldImage.height = 180
					worldDescription.textContent = world.description
					worldId.textContent = `${world.id} - ${world.blocks} blocks`
					worldId.style.fontSize = '0.7em'
					playButton.textContent = 'Play'
					playButton.className = 'play-btn'
					playButton.addEventListener('click', () => {
						window.location.href = `https://wubbygame.com/world/${world.id}`
					})

					worldOwner.textContent = `Owner: https://roblox.com/users/${world.creator}/profile`
					worldOwner.style.fontSize = '0.7em'

					worldList.appendChild(listItem)
					listItem.appendChild(worldName)
					listItem.appendChild(worldImage)
					listItem.appendChild(worldDescription)
					listItem.appendChild(worldId)
					listItem.appendChild(playButton)
				})
			})
		</script>
	</head>
	<body>
		<Header />
		<main>
			<div style="margin: 1em;">
				<div style="display: flex; justify-content: center;">
					<input class="search-bar" type="text" placeholder="Search..." style="width: 300px;" />
					<button class="search-btn">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search"><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>
					</button>
				</div>
			</div>
			<section>
				<ul class="world-list" style="display: flex; flex-wrap: wrap;">
					{
					
						

						// posts.map((post) => (
						// 	<li>
						// 		<a href={`https://blockate.com/${post.slug}`}>
						// 			<img width={720} height={360} src={post.data.heroImage} alt="" />
						// 			<h4 class="title">{post.data.title}</h4>
						// 			<p class="date">
						// 				<FormattedDate date={post.data.pubDate} />
						// 			</p>
						// 		</a>
						// 	</li>
						// ))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>

